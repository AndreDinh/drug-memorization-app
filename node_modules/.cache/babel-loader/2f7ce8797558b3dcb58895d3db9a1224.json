{"ast":null,"code":"var _jsxFileName = \"/Users/andre/Documents/Code projects/drug-memorization-app/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport drugsData from './drugs'; // Import the drug data\n\nfunction App() {\n  const [currentDrugIndex, setCurrentDrugIndex] = useState(0);\n  const [history, setHistory] = useState([]); // Stack to store navigation history\n  const [activeDrugs, setActiveDrugs] = useState(drugsData); // Active list of drugs being studied\n  const [completedDrugs, setCompletedDrugs] = useState([]); // List of completed drugs\n\n  // Handle progressing to the next drug\n  const handleNext = () => {\n    if (activeDrugs.length > 1) {\n      setCompletedDrugs(prev => [...prev, activeDrugs[currentDrugIndex]]);\n      setHistory(prevHistory => [...prevHistory, currentDrugIndex]);\n      setCurrentDrugIndex(prev => (prev + 1) % activeDrugs.length);\n    } else {\n      alert(\"You have excluded all drugs or completed the study session.\");\n    }\n  };\n\n  // Handle going back to the previous drug\n  const handleBack = () => {\n    if (history.length > 0) {\n      const previousIndex = history[history.length - 1];\n      setHistory(prevHistory => prevHistory.slice(0, -1)); // Remove the last entry from history\n      setCurrentDrugIndex(previousIndex); // Go back to the previous drug\n    } else {\n      alert(\"No more previous drugs.\");\n    }\n  };\n\n  // Pronounce a drug name\n  const handlePronounce = text => {\n    const utterance = new SpeechSynthesisUtterance(text);\n    speechSynthesis.speak(utterance);\n  };\n\n  // Exclude the current drug from the study session\n  const handleExclude = () => {\n    const updatedDrugs = activeDrugs.filter((_, index) => index !== currentDrugIndex);\n    setCompletedDrugs(prev => [...prev, activeDrugs[currentDrugIndex]]);\n    setActiveDrugs(updatedDrugs);\n    setCurrentDrugIndex(0); // Reset index to the start of the updated list\n  };\n  if (activeDrugs.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }\n    }, \"No more drugs to study!\"));\n  }\n  const currentDrug = activeDrugs[currentDrugIndex];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Study Progress\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, drugsData.map((drug, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    style: {\n      textDecoration: completedDrugs.includes(drug) ? 'line-through' : 'none',\n      fontWeight: currentDrugIndex === index ? 'bold' : 'normal',\n      color: completedDrugs.includes(drug) ? 'gray' : 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, drug.brand, \" (\", drug.generic, \")\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Brand Name: \", currentDrug.brand), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Generic Name: \", currentDrug.generic), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Category: \", currentDrug.category), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handlePronounce(currentDrug.brand),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Pronounce Brand\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handlePronounce(currentDrug.generic),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Pronounce Generic\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Next Drug\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Go Back\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleExclude,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Exclude Drug\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Progress: \", completedDrugs.length, \" / \", drugsData.length))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","drugsData","App","currentDrugIndex","setCurrentDrugIndex","history","setHistory","activeDrugs","setActiveDrugs","completedDrugs","setCompletedDrugs","handleNext","length","prev","prevHistory","alert","handleBack","previousIndex","slice","handlePronounce","text","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","handleExclude","updatedDrugs","filter","_","index","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","currentDrug","map","drug","key","style","textDecoration","includes","fontWeight","color","brand","generic","category","onClick"],"sources":["/Users/andre/Documents/Code projects/drug-memorization-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport drugsData from './drugs';  // Import the drug data\n\nfunction App() {\n  const [currentDrugIndex, setCurrentDrugIndex] = useState(0);\n  const [history, setHistory] = useState([]); // Stack to store navigation history\n  const [activeDrugs, setActiveDrugs] = useState(drugsData); // Active list of drugs being studied\n  const [completedDrugs, setCompletedDrugs] = useState([]); // List of completed drugs\n\n  // Handle progressing to the next drug\n  const handleNext = () => {\n    if (activeDrugs.length > 1) {\n      setCompletedDrugs((prev) => [...prev, activeDrugs[currentDrugIndex]]);\n      setHistory((prevHistory) => [...prevHistory, currentDrugIndex]);\n      setCurrentDrugIndex((prev) => (prev + 1) % activeDrugs.length);\n    } else {\n      alert(\"You have excluded all drugs or completed the study session.\");\n    }\n  };\n\n  // Handle going back to the previous drug\n  const handleBack = () => {\n    if (history.length > 0) {\n      const previousIndex = history[history.length - 1];\n      setHistory((prevHistory) => prevHistory.slice(0, -1)); // Remove the last entry from history\n      setCurrentDrugIndex(previousIndex); // Go back to the previous drug\n    } else {\n      alert(\"No more previous drugs.\");\n    }\n  };\n\n  // Pronounce a drug name\n  const handlePronounce = (text) => {\n    const utterance = new SpeechSynthesisUtterance(text);\n    speechSynthesis.speak(utterance);\n  };\n\n  // Exclude the current drug from the study session\n  const handleExclude = () => {\n    const updatedDrugs = activeDrugs.filter((_, index) => index !== currentDrugIndex);\n    setCompletedDrugs((prev) => [...prev, activeDrugs[currentDrugIndex]]);\n    setActiveDrugs(updatedDrugs);\n    setCurrentDrugIndex(0); // Reset index to the start of the updated list\n  };\n\n  if (activeDrugs.length === 0) {\n    return <div className=\"App\"><h1>No more drugs to study!</h1></div>;\n  }\n\n  const currentDrug = activeDrugs[currentDrugIndex];\n\n  return (\n    <div className=\"App\">\n      <div className=\"quiz-container\">\n        {/* Progress List on the left-hand side */}\n        <div className=\"progress-list\">\n          <h3>Study Progress</h3>\n          <ul>\n            {drugsData.map((drug, index) => (\n              <li\n                key={index}\n                style={{\n                  textDecoration: completedDrugs.includes(drug) ? 'line-through' : 'none',\n                  fontWeight: currentDrugIndex === index ? 'bold' : 'normal',\n                  color: completedDrugs.includes(drug) ? 'gray' : 'black'\n                }}\n              >\n                {drug.brand} ({drug.generic})\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {/* Quiz Box on the right-hand side */}\n        <div className=\"quiz-box\">\n          <h2>Brand Name: {currentDrug.brand}</h2>\n          <h3>Generic Name: {currentDrug.generic}</h3>\n          <h4>Category: {currentDrug.category}</h4>\n          <button onClick={() => handlePronounce(currentDrug.brand)}>Pronounce Brand</button>\n          <button onClick={() => handlePronounce(currentDrug.generic)}>Pronounce Generic</button>\n          <button onClick={handleNext}>Next Drug</button>\n          <button onClick={handleBack}>Go Back</button>\n          <button onClick={handleExclude}>Exclude Drug</button>\n        </div>\n\n        {/* Progress Box */}\n        <div className=\"progress-box\">\n          <h3>Progress: {completedDrugs.length} / {drugsData.length}</h3>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}