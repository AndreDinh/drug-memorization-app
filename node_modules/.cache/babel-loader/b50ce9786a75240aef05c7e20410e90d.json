{"ast":null,"code":"var _jsxFileName = \"/Users/andre/Documents/Code projects/drug-memorization-app/drug-memorization-app/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport drugsData from './drugs'; // Import the drug data\n\nfunction App() {\n  const [currentDrugIndex, setCurrentDrugIndex] = useState(0);\n  const [showSyllables, setShowSyllables] = useState(false); // State for syllable toggle\n  const [completedDrugs, setCompletedDrugs] = useState([]); // List of completed drugs\n\n  // Function to handle moving to the next drug\n  const handleNext = () => {\n    if (currentDrugIndex < drugsData.length - 1) {\n      setCompletedDrugs(prev => [...prev, drugsData[currentDrugIndex]]);\n      setCurrentDrugIndex(prev => prev + 1);\n    }\n  };\n\n  // Function to handle moving to the previous drug\n  const handleBack = () => {\n    if (currentDrugIndex > 0) {\n      setCurrentDrugIndex(prev => prev - 1);\n    }\n  };\n\n  // Toggle function to show syllables or not\n  const toggleSyllables = () => {\n    setShowSyllables(prev => !prev);\n  };\n\n  // Handle clicking on a drug in the list to navigate\n  const handleSelectDrug = index => {\n    setCurrentDrugIndex(index);\n  };\n\n  // Reset function to restart progress and reset the current drug\n  const handleReset = () => {\n    setCurrentDrugIndex(0); // Go back to the first drug\n    setCompletedDrugs([]); // Clear the completed drugs list\n    setShowSyllables(false); // Hide syllables if shown\n  };\n\n  // Pronounce the current brand and generic names using Web Speech API\n  const pronounceDrug = () => {\n    const utterBrand = new SpeechSynthesisUtterance(currentDrug.brand);\n    const utterGeneric = new SpeechSynthesisUtterance(currentDrug.generic);\n    window.speechSynthesis.speak(utterBrand);\n    window.speechSynthesis.speak(utterGeneric);\n  };\n  const currentDrug = drugsData[currentDrugIndex];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Study Progress\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, drugsData.map((drug, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    onClick: () => handleSelectDrug(index),\n    className: `\n                  ${completedDrugs.includes(drug) ? 'completed' : ''}\n                  ${currentDrugIndex === index ? 'bold' : ''}\n                `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, drug.brand, \" (\", drug.generic, \")\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Brand Name: \", showSyllables ? currentDrug.brandSyllables : currentDrug.brand), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Generic Name: \", showSyllables ? currentDrug.genericSyllables : currentDrug.generic), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Category: \", currentDrug.category), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleSyllables,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, showSyllables ? 'Hide Syllables' : 'Show Syllables'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleBack,\n    disabled: currentDrugIndex === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Previous Drug\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNext,\n    disabled: currentDrugIndex === drugsData.length - 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Next Drug\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: pronounceDrug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Pronounce Again\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Reset\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Progress: \", completedDrugs.length, \" / \", drugsData.length))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","drugsData","App","currentDrugIndex","setCurrentDrugIndex","showSyllables","setShowSyllables","completedDrugs","setCompletedDrugs","handleNext","length","prev","handleBack","toggleSyllables","handleSelectDrug","index","handleReset","pronounceDrug","utterBrand","SpeechSynthesisUtterance","currentDrug","brand","utterGeneric","generic","window","speechSynthesis","speak","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","drug","key","onClick","includes","brandSyllables","genericSyllables","category","disabled"],"sources":["/Users/andre/Documents/Code projects/drug-memorization-app/drug-memorization-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport drugsData from './drugs'; // Import the drug data\n\nfunction App() {\n  const [currentDrugIndex, setCurrentDrugIndex] = useState(0);\n  const [showSyllables, setShowSyllables] = useState(false); // State for syllable toggle\n  const [completedDrugs, setCompletedDrugs] = useState([]); // List of completed drugs\n\n  // Function to handle moving to the next drug\n  const handleNext = () => {\n    if (currentDrugIndex < drugsData.length - 1) {\n      setCompletedDrugs((prev) => [...prev, drugsData[currentDrugIndex]]);\n      setCurrentDrugIndex((prev) => prev + 1);\n    }\n  };\n\n  // Function to handle moving to the previous drug\n  const handleBack = () => {\n    if (currentDrugIndex > 0) {\n      setCurrentDrugIndex((prev) => prev - 1);\n    }\n  };\n\n  // Toggle function to show syllables or not\n  const toggleSyllables = () => {\n    setShowSyllables((prev) => !prev);\n  };\n\n  // Handle clicking on a drug in the list to navigate\n  const handleSelectDrug = (index) => {\n    setCurrentDrugIndex(index);\n  };\n\n  // Reset function to restart progress and reset the current drug\n  const handleReset = () => {\n    setCurrentDrugIndex(0);  // Go back to the first drug\n    setCompletedDrugs([]);   // Clear the completed drugs list\n    setShowSyllables(false); // Hide syllables if shown\n  };\n\n  // Pronounce the current brand and generic names using Web Speech API\n  const pronounceDrug = () => {\n    const utterBrand = new SpeechSynthesisUtterance(currentDrug.brand);\n    const utterGeneric = new SpeechSynthesisUtterance(currentDrug.generic);\n\n    window.speechSynthesis.speak(utterBrand);\n    window.speechSynthesis.speak(utterGeneric);\n  };\n\n  const currentDrug = drugsData[currentDrugIndex];\n\n  return (\n    <div className=\"App\">\n      <div className=\"quiz-container\">\n        {/* Progress List on the left-hand side */}\n        <div className=\"progress-list\">\n          <h3>Study Progress</h3>\n          <ul>\n            {drugsData.map((drug, index) => (\n              <li\n                key={index}\n                onClick={() => handleSelectDrug(index)}\n                className={`\n                  ${completedDrugs.includes(drug) ? 'completed' : ''}\n                  ${currentDrugIndex === index ? 'bold' : ''}\n                `}\n              >\n                {drug.brand} ({drug.generic})\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {/* Quiz Box */}\n        <div className=\"quiz-box\">\n          <h2>\n            Brand Name: {showSyllables ? currentDrug.brandSyllables : currentDrug.brand}\n          </h2>\n          <h3>\n            Generic Name: {showSyllables ? currentDrug.genericSyllables : currentDrug.generic}\n          </h3>\n          <h4>Category: {currentDrug.category}</h4>\n          <button onClick={toggleSyllables}>\n            {showSyllables ? 'Hide Syllables' : 'Show Syllables'}\n          </button>\n          <button onClick={handleBack} disabled={currentDrugIndex === 0}>\n            Previous Drug\n          </button>\n          <button onClick={handleNext} disabled={currentDrugIndex === drugsData.length - 1}>\n            Next Drug\n          </button>\n          <button onClick={pronounceDrug}>\n            Pronounce Again\n          </button>\n          {/* Reset Button */}\n          <button onClick={handleReset}>\n            Reset\n          </button>\n        </div>\n\n        {/* Progress Box */}\n        <div className=\"progress-box\">\n          <h3>Progress: {completedDrugs.length} / {drugsData.length}</h3>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}